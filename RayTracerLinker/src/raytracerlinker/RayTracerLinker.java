/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package raytracerlinker;

import java.io.BufferedReader;
import java.io.File;
import java.io.InputStream;
import java.io.InputStreamReader;
import javax.swing.JOptionPane;

/**
 *
 * @author Jun
 */
public class RayTracerLinker extends javax.swing.JFrame {

    /**
     * Creates new form RayTracerLinker
     */
    public RayTracerLinker() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        getFrontEnd = new javax.swing.JButton();
        getBackEnd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ray Tracer Linker");

        getFrontEnd.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        getFrontEnd.setText("Draw Image");
        getFrontEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getFrontEndActionPerformed(evt);
            }
        });

        getBackEnd.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        getBackEnd.setText("Render Image");
        getBackEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getBackEndActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(getFrontEnd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(getBackEnd)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getFrontEnd)
                    .addComponent(getBackEnd))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getFrontEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getFrontEndActionPerformed
        try 
        {
            File f = new File("debug\\RaytraceFrontEnd.exe");
            ProcessBuilder builder = new ProcessBuilder(f.getAbsolutePath());
            Process process = builder.start();
            InputStream inputStream = process.getInputStream();
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream), 1);
            String line;
            while ((line = bufferedReader.readLine()) != null) 
            {
                System.out.println(line);
            }
            inputStream.close();
            bufferedReader.close();
        } 
        catch (Exception ioe) 
        {
            JOptionPane.showMessageDialog(null, ioe);
        }
    }//GEN-LAST:event_getFrontEndActionPerformed

    private void getBackEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getBackEndActionPerformed
        try 
        {
            File f = new File("RayTrace3.exe");
            ProcessBuilder builder = new ProcessBuilder(f.getAbsolutePath());
            Process process = builder.start();
            InputStream inputStream = process.getInputStream();
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream), 1);
            String line;
            while ((line = bufferedReader.readLine()) != null) 
            {
                System.out.println(line);
            }
            inputStream.close();
            bufferedReader.close();
        } 
        catch (Exception ioe) 
        {
            JOptionPane.showMessageDialog(null, ioe);
        }
    }//GEN-LAST:event_getBackEndActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RayTracerLinker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RayTracerLinker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RayTracerLinker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RayTracerLinker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RayTracerLinker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton getBackEnd;
    public javax.swing.JButton getFrontEnd;
    // End of variables declaration//GEN-END:variables
}
